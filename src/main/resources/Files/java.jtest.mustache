/* This file is output by shortTest as a translation of inline test shorthand.
 * THIS FILE WILL BE OVERWRITTEN WITHOUT WARNING.
 * You have been warned */

package {{package_name}}.{{testNamespace}};
import {{class_fqname}};
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

class {{className}}test {

    {{{testDeclaration}}}

    {{#testSetup}}
    @org.junit.jupiter.api.BeforeEach
    void setUp() {
        {{{testSetup}}}
    }

    {{/testSetup}}
    {{#testTeardown}}
    @org.junit.jupiter.api.AfterEach
    void tearDown() {
        {{{testTeardown}}}
    }

    {{/testTeardown}}
    {{#methodList}}
        {{#testList}}
    /*
{{^testDoc}}
    * Ensuring {{{testMethodName}}}{{{predicate}}} {{#exceptionTest}}throws{{/exceptionTest}}{{^exceptionTest}}results in{{/exceptionTest}} {{{result}}}
{{/testDoc}}
{{#testDoc}}
{{{testDoc}}}
{{/testDoc}}
    */
    @Test
    public void {{testName}}(){
{{#testPreamble}}
{{{testPreamble}}}
{{/testPreamble}}
    {{^testPreamble}}
        {{^isStatic}}
        var article = new {{{className}}}{{#constructor}}{{{constructor}}}{{/constructor}}{{^constructor}}(){{/constructor}};
        {{/isStatic}}
    {{/testPreamble}}
    {{#exceptionTest}}
        assertThrows(
            {{{result}}}.class,
            ()->{{^isStatic}}article{{/isStatic}}{{#isStatic}}{{{className}}}{{/isStatic}}.{{{testMethodName}}}{{{predicate}}}
            {{#errorMessage}},"{{{errorMessage}}}"{{/errorMessage}});
    {{/exceptionTest}}
    {{^exceptionTest}}
        assertEquals(
            {{^isStatic}}article{{/isStatic}}{{#isStatic}}{{{className}}}{{/isStatic}}.{{{testMethodName}}}{{{predicate}}},
            {{{result}}}
            {{#errorMessage}},"{{{errorMessage}}}"{{/errorMessage}});
    {{/exceptionTest}}
    {{{postTest}}}
    }

        {{/testList}}
    {{/methodList}}
}