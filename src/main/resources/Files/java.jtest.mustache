/* This file is output by shortTest as a translation of inline test shorthand.
 * THIS FILE WILL BE OVERWRITTEN WITHOUT WARNING.
 * You have been warned */

package {{package_name}}.{{testNamespace}};
import {{class_fqname}};
import static org.junit.Assert.*;
import org.junit.*;

public class {{className}}{{class_name_postfix}} {

    {{{testDeclaration}}}
    {{#testSetup}}
    @Before
    void setUp() {
        {{{testSetup}}}
    }

    {{/testSetup}}
    {{#testTeardown}}
    @After
    void tearDown() {
        {{{testTeardown}}}
    }

    {{/testTeardown}}
    {{#methodList}}
        {{#testList}}
    /*
{{^testDoc}}
    * Ensuring {{{testMethodName}}}{{{predicate}}} {{#exceptionTest}}throws{{/exceptionTest}}{{^exceptionTest}}{{^inverted}}results{{/inverted}}{{#inverted}}does not result{{/inverted}} in{{/exceptionTest}} {{{result}}}
{{/testDoc}}
{{#testDoc}}
{{{testDoc}}}
{{/testDoc}}
    */
    @Test
    public void {{testName}}(){
{{#testPreamble}}
{{{testPreamble}}}
{{/testPreamble}}
    {{#exceptionTest}}
        {{#result}}{{^inverted}}assertThrows({{#errorMessage}}"{{{errorMessage}}}",{{/errorMessage}}
        {{{result}}}.class,
        ()->{{/inverted}}{{/result}}{{^isStatic}}{{article_name}}{{/isStatic}}{{#isStatic}}{{{className}}}{{/isStatic}}.{{{testMethodName}}}{{{predicate}}}
        {{#result}}{{^inverted}}){{/inverted}}{{/result}};
    {{/exceptionTest}}
    {{^exceptionTest}}
        {{#result}}assert{{#inverted}}Not{{/inverted}}Equals({{#errorMessage}}"{{{errorMessage}}}",
        {{/errorMessage}}{{{result}}},{{/result}}
        {{^isStatic}}{{article_name}}{{/isStatic}}{{#isStatic}}{{{className}}}{{/isStatic}}.{{{testMethodName}}}{{{predicate}}}{{#result}}){{/result}};
    {{/exceptionTest}}
    {{{postTest}}}
    }

        {{/testList}}
    {{/methodList}}
}